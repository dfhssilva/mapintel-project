apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: api-gpu
      name: api-gpu
    spec:
      ports:
        - name: "8000"
          port: 8000
          targetPort: 8000
      selector:
        io.kompose.service: api-gpu
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: odfe-node1
      name: odfe-node1
    spec:
      ports:
        - name: "9200"
          port: 9200
          targetPort: 9200
      selector:
        io.kompose.service: odfe-node1
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: ui
      name: ui
    spec:
      type: LoadBalancer
      ports:
        - name: "8501"
          port: 8501
          targetPort: 8501
      selector:
        io.kompose.service: ui
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: api-gpu
      name: api-gpu
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: api-gpu
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.network/odfe-net: "true"
            io.kompose.service: api-gpu
        spec:
          containers:
            - args:
                - newsapi
              env:
                - name: DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: DEBUG
                      name: env
                - name: NEWSAPIKEY
                  valueFrom:
                    configMapKeyRef:
                      key: NEWSAPIKEY
                      name: env
              image: ghcr.io/nova-ims-innovation-and-analytics-lab/mapintel-api-gpu:latest
              name: api-gpu
              ports:
                - containerPort: 8000
              resources:
                requests:
                  memory: "3000Mi"
                  cpu: "1000m"
                limits:
                  memory: "10000Mi"
                  cpu: "2000m"
              volumeMounts:
                - mountPath: /home/user/artifacts
                  name: api-gpu-claim0
          hostname: api
          restartPolicy: Always
          volumes:
            - name: api-gpu-claim0
              persistentVolumeClaim:
                claimName: api-gpu-claim0
    status: {}
  - apiVersion: v1
    data:
      DEBUG: "0"
      NEWSAPIKEY: 982796d7dec8411d9ec9d8f09d20666c
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: api-gpu-env
      name: env
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: odfe-net
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/odfe-net: "true"
      podSelector:
        matchLabels:
          io.kompose.network/odfe-net: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: odfe-node1
      name: odfe-node1
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: odfe-node1
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.network/odfe-net: "true"
            io.kompose.service: odfe-node1
        spec:
          initContainers:
            - name: permissions-fix
              image: busybox
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: odfe-data1
                  mountPath: /usr/share/elasticsearch/data
              command: [ 'chown' ]
              args: [ '1000:1000', '/usr/share/elasticsearch/data' ]
            - name: init-sysctl
              image: busybox
              imagePullPolicy: IfNotPresent
              command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
              securityContext:
                privileged: true
          containers:
            - env:
                - name: discovery.type
                  value: single-node
                - name: node.name
                  value: odfe-node1
              image: amazon/opendistro-for-elasticsearch:1.13.2
              name: odfe-node1
              ports:
                - containerPort: 9200
              resources:
                requests:
                  memory: "2000Mi"
                  cpu: "1000m"
                limits:
                  memory: "6000Mi"
                  cpu: "2000m"
              volumeMounts:
                - mountPath: /usr/share/elasticsearch/data
                  name: odfe-data1
          restartPolicy: Always
          volumes:
            - name: odfe-data1
              persistentVolumeClaim:
                claimName: odfe-data1
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: ui
      name: ui
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: ui
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.network/odfe-net: "true"
            io.kompose.service: ui
        spec:
          containers:
            - env:
                - name: API_ENDPOINT
                  value: http://api-gpu:8000
              image: ghcr.io/nova-ims-innovation-and-analytics-lab/mapintel-ui:latest
              name: ui
              ports:
                - containerPort: 8501
              resources:
                requests:
                  memory: "500Mi"
                  cpu: "250m"
                limits:
                  memory: "1000Mi"
                  cpu: "750m"
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

